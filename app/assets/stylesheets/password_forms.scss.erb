/*
  Password (own/someone else's) changing form. Most of this file was
  just pieced together from various places in the bits/ directory.
*/

@import "bits/colors";
@import "bits/media_queries";

$passwordFormBody: #fff;
$passwordFormTabBackground: linear-gradient($baseOrange, $baseOrangeGradient);
$passwordFormTabForeground: #000;
$passwordFormTabNormalBackground: $baseOrange;
$passwordFormTabNormalForeground: #000;
$passwordFormTabHoverBackground: $baseOrangeGradient;
$passwordFormTabHoverForeground: #000;

* {
  box-sizing: border-box;
}

body {
  line-height: 1.5;
}

h1 {
  font-size: 250%;
  border-bottom: 1px solid $headerBorder;
}

h2 {
  margin-top: 25px;
  font-size: 200%;
  border-bottom: 1px dashed $headerBorder;
}

table {
  border-collapse: collapse;
}

th, td {
  vertical-align: middle;
  margin: 0;
  padding: 6px;
}

th {
  font-size: 110%;
  text-align: left;
  text-decoration: none;
}

.formContainer {
  width: 100%;
  max-width: 1300px;

  @media #{$screen-breakpoint-one} {
    max-width: unset;
  }
}

.editForm {
  width: 100%;

  /* Labels for checkboxes/radio buttons */
  label {
    font-weight: normal;
    font-size: 120%;
    line-height: 2;
  }

  select {
    padding: 5px;
    width: 100%;
  }

  textarea {
    width: 100%;
  }

  /* Embedded tables */
  td, th {
    padding: 10px;
  }

  th label {
    /* Row labels */
    font-size: 110%;
    font-weight: bold;
    word-wrap: none;
    color: $formLabelColor;
    padding: 0;
    margin: 0;
  }

  tr:nth-child(odd) {
    background: $formOddRowBack;
  }

  tr:nth-child(even) {
    background: $formEvenRowBack;
  }

  th {
    text-align: right;
    width: 250px;
  }

  .buttonRow {
    th, td {
      background: $formButtonRowBack !important;
      text-align: center;
    }
  }

  input[type="text"], input[type="password"] {
    width: 100%;
    padding: 10px;
    margin: 5px 0;
  }

  input[type="checkbox"], input[type="radio"] {
    padding: 0;
    margin: 0 5px 0 0;    /* push labels away from the input box */

    @media #{$screen-breakpoint-one} {
      /* The label gets collapsed, so push the element away from the
         element above it. */
      margin: 10px;
    }
  }

  /* Submit and cancel buttons */
  input[type="submit"] {
    height: 40px;
    width: 150px;
    max-width: 300px;
  }

  input[type="submit"]:disabled {
    color: #888;
  }

  .cancel {
    display: inline;
    /*font-size: 100%;
    margin: 0;
    padding: 0;*/
    width: 100px;
    margin-left: 30px;
  }

  span.field_error {
    color: $formErrorColor;
    display: block;
  }
}

input[type="submit"] {
  cursor: pointer;
}

input[type="submit"]:disabled {
  color: #888;
}

input[type="submit"]:hover {
}

input[type="submit"]:disabled:hover {
  cursor: not-allowed;
}

@media #{$screen-breakpoint-one} {
  /*Â Turn form tables into what looks like lists of table rows, just like
     non-form tables of things. */
  .editForm {
    padding: 0;

    table, tbody {
      display: block;
    }

    tr {
      display: block;
      position: relative;
      padding: 5px 10px;
    }

    th {
      text-align: left;
      width: auto;
      padding: 0;
    }

    .buttonRow {
      background: $formButtonRowBack !important;
    }

    td {
      display: block;
      text-align: left;
      padding: 0;
    }
  }
}

/* Server and git commit infos */
footer {
  display: block;
  color: $footerFore;
  text-align: center;
  font-size: 70%;
  margin: 1em;

  @media #{$screen-breakpoint-one} {
    font-size: 60%;
  }
}

@import "bits/messages";

.passwordBody {
  background: $passwordFormBody;
  font-family: "Cantarell", "Ubuntu", "Arial", sans-serif;
}

.passwordContainer {
  width: 90%;
  font-size: 100%;
  margin: 25px auto;
  max-width: 1200px;
  min-width: 600px;   /* the mobile layout kicks in before this (at least it should...) */

  @media #{$screen-breakpoint-one} {
    width: 100%;
    margin: 0;
    max-width: unset;
    min-width: unset;
  }

  .passwordTabs {
    ul {
      list-style-type: none;
      display: flex;
      align-items: stretch;
      justify-content: space-evenly;
      margin: 0;
      padding: 0;
    }

    li {
      display: inline;
      width: 50%;
    }

    a, span {
      display: block;
      height: 100%;
      color: inherit;
      padding: 1em 0;
      text-align: center;
    }

    a {
      text-decoration: none;
      background: $passwordFormTabNormalBackground;
      color: $passwordFormTabNormalForeground;
    }

    a:hover {
      background: $passwordFormTabHoverBackground;
      color: $passwordFormTabHoverForeground;
    }

    span {
      background: $passwordFormTabBackground;
      color: $passwordFormTabForeground;
      cursor: default;
      font-weight: bold;
    }

    #left {
      border-radius: 10px 0 0 0;
    }

    #right {
      border-radius: 0 10px 0 0;
    }

    @media #{$screen-breakpoint-one} {
      a {
        font-size: 100%;
        padding: 1em 0;
      }

      #left, #right {
        border-radius: 0;
      }
    }
  }

  .content {
    font-size: 80%;
    background: #fff;
    border: 10px solid $baseOrangeGradient;
    padding: 1em;

    @media #{$screen-breakpoint-one} {
      border: none;
      border-radius: 0;
    }

    h1 {
      margin: 0 0 1em 0;
      padding: 0;
    }
  }
}

/* Also used on user edit forms */
.passwordNotice {
  background: $passwordRequirementsBackground;
  border: 1px solid $passwordRequirementsBorder;
  padding: 1em;
}

/* Position custom domains after username fields */
.passwordDomainContainer {
  display: flex;
  align-items: center;

  input, span {
    display: inline;
  }

  input {
    max-width: 25%;
  }

  span {
    margin-left: 0.5em;
    font-size: 110%;
  }
}
